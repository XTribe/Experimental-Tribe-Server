var Stash  = require('stash')
  , Step   = require('step')
  , Drupal = require('drupal')
 
// Stash is exported for tests
var stash = exports.stash = Stash.createClient();

exports.getUser = function (site, uId, guid, cb) {
  
  var k = getKey(uId);

  Step (
    
    function() {
      stash.get(k, this);
    }
    
    ,
    
    function (err, data) {
      if (data && uId!=0) {
        this(null, data, true);
      } else {
        // This is also called for anonymous users
        // A different function is called
        if(uId!=0){
          Drupal.createClient(site)
              .get('/ets/services/user-info/' + uId, null, this);
        }else{
          Drupal.createClient(site)
              .get('/ets/services/user-info-an/' + guid, null, this);
        }        
      }

    }

    ,

    function (error, data, cached) {
      cached = cached || false;

      if (error) {
        cb && cb(error);
        return;
      }

      if (cached) {
        // Data is the complete user object
        // Anonymous user lives in cache too, but we need to overwrite the guid anyway
        // (anon users have a different guid each)
        data.guid = guid
        cb(null, data);
      } else {
        // Data is from Drupal, so we need to create the complete user object
        var user = {};
        user.uId  = uId;
        user.guid = guid;
        user.data = data;
        stash.set(k, user, 120);
        cb(null, user);
      }
      
      return;
      
    }

  );

}

// for tests
exports.cacheExpire = function(uId, cb) {
  stash.del(getKey(uId), cb);
}

var getKey = function(uId) {
  return 'user:' + uId;
}


