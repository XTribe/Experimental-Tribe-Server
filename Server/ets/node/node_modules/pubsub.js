
var cfg = require('config').read()

const REDISCH_INSTANCE_NEW   = 'instance:new';
const REDISCH_INSTANCE_LEAVE = 'instance:leave';
const REDISCH_INSTANCE_JOIN  = 'instance:join';
const REDISCH_INSTANCE_DROP  = 'instance:drop';
const REDISCH_INSTANCE_OVER  = 'instance:over';
const REDISCH_INSTANCE_READY = 'instance:ready';
const REDISCH_INSTANCE_STARTED   = 'instance:started';
const REDISCH_INSTANCE_ERROR   = 'instance:error';
const REDISCH_INSTANCE_HUNGED   = 'instance:hunged';

const REDISCH_LOG            = 'log';
const REDISCH_STATS          = 'stats';

exports.channels = {}

exports.channels.INSTANCE_NEW   = REDISCH_INSTANCE_NEW;
exports.channels.INSTANCE_JOIN  = REDISCH_INSTANCE_JOIN;
exports.channels.INSTANCE_LEAVE = REDISCH_INSTANCE_LEAVE;
exports.channels.INSTANCE_OVER  = REDISCH_INSTANCE_OVER;
exports.channels.INSTANCE_READY = REDISCH_INSTANCE_READY;
exports.channels.INSTANCE_DROP  = REDISCH_INSTANCE_DROP;
exports.channels.INSTANCE_STARTED   = REDISCH_INSTANCE_STARTED;
exports.channels.INSTANCE_ERROR   = REDISCH_INSTANCE_ERROR;
exports.channels.INSTANCE_HUNGED   = REDISCH_INSTANCE_HUNGED;

exports.channels.LOG         = REDISCH_LOG;
exports.channels.STATS       = REDISCH_STATS;

exports.createClient = function(dummy) {
  
  if (dummy) {
    return new PubSubDummyClient();
  } else {
    return new PubSubClient();
  }
}

PubSubClient = function() {
  this.available = true
  this.client = require('redis').createClient(cfg.services.redis.port, cfg.services.redis.host);
  var self = this  
  this.client.on("error", function() {
    self.client.closing = true
    self.available = false
  })
}

PubSubClient.prototype.publish = function(channel, message) {
  if (this.available) {
    this.client.publish(channel, JSON.stringify(message));
  }
}
  
PubSubClient.prototype.subscribe = function(subChannel, cb) {
  if (this.available) {
    this.client.subscribe(subChannel);
    this.client.on("message", function(channel, message) {
      if (channel == subChannel) {
        cb(JSON.parse(message));
      }
    });
  }
}

PubSubDummyClient = function() {
}

PubSubDummyClient.prototype.publish = function(channel, message) {
}
  
PubSubDummyClient.prototype.subscribe = function(subChannel, cb) {
}
